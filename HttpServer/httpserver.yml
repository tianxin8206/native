---
apiVersion: v1
kind: Namespace
metadata:
  name: native

---
apiVersion: v1
data:
  config.json: |-
    {
      "Port": 8081
    }
kind: ConfigMap
metadata:
  annotations: {}
  labels: {}
  name: httpserverconfig
  namespace: native

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    mylabel: httpserver
  name: httpserver
  namespace: native
spec:
  replicas: 3
  selector:
    matchLabels:
      mylabel: httpserver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
      labels:
        mylabel: httpserver
    spec:
      containers:
        - image: 'tianxin8206/httpserver:1.1'
          name: httpserver
          imagePullPolicy: Always
          lifecycle:
            postStart:
              httpGet:
                path: healthz
                port: 8081
                scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          ports:
            - containerPort: 8081
              name: httpserver
              protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 20Mi
          volumeMounts:
            - mountPath: /app/config.json
              name: volume-configmap
              subPath: config.json
      restartPolicy: Always
      schedulerName: default-scheduler
      volumes:
        - configMap:
            items:
              - key: config.json
                path: config.json
            name: httpserverconfig
          name: volume-configmap

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels: {}
  name: httpserver
  namespace: native
spec:
  ports:
    - name: httpserver
      nodePort: 38080
      port: 8081
      protocol: TCP
      targetPort: 8081
  selector:
    mylabel: httpserver
  type: NodePort
